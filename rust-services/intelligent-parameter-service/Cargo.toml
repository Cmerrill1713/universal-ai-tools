[package]
name = "intelligent-parameter-service"
version = "0.1.0"
edition = "2021"
authors = ["Universal AI Tools Team"]
description = "ML-based intelligent parameter optimization service for LLM calls"
license = "MIT"

[lib]
name = "intelligent_parameter_service"
crate-type = ["lib", "cdylib"]

[dependencies]
# Core dependencies
tokio = { version = "1.47", features = ["full"] }
async-trait = "0.1"
futures = "0.3"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
uuid = { version = "1.18", features = ["v4", "serde"] }
chrono = { version = "0.4", features = ["serde"] }
anyhow = "1.0"
thiserror = "1.0"

# Machine Learning
smartcore = { version = "0.3", features = ["serde"] }
linfa = "0.7"
linfa-trees = "0.7"
linfa-clustering = "0.7"
nalgebra = "0.32"
ndarray = { version = "0.15", features = ["rayon", "serde"] }
statrs = "0.16"
rand = "0.8"

# Optimization
argmin = { version = "0.9", features = ["serde1"] }
argmin-math = { version = "0.3", features = ["nalgebra_latest"] }

# Caching
redis = { version = "0.25", features = ["tokio-comp", "connection-manager", "json"] }
lru = "0.12"
moka = { version = "0.12", features = ["future"] }

# Parallel processing
rayon = "1.11"
crossbeam = "0.8"
dashmap = "5.5"

# Logging and metrics
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "json"] }
prometheus = { version = "0.13", features = ["process"] }
metrics = "0.23"

# Reinforcement Learning
tch = { version = "0.13", optional = true }  # PyTorch bindings for deep RL

# FFI
libc = "0.2"

[features]
default = ["ffi"]
ffi = []
deep-learning = ["tch"]

[dev-dependencies]
criterion = { version = "0.5", features = ["html_reports"] }
proptest = "1.7"
tempfile = "3.21"
approx = "0.5"

[build-dependencies]
cc = "1.2"

[profile.release]
opt-level = 3
lto = true
codegen-units = 1

[profile.bench]
inherits = "release"

[workspace]