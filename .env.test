# Universal AI Tools - Docker Testing Environment Configuration
# FOR TESTING ONLY - Use mock/development values

# =================================================================
# CRITICAL: Database Configuration (Required)
# =================================================================

# PostgreSQL Database Settings
POSTGRES_USER=postgres
POSTGRES_PASSWORD=test-postgres-password-2024
POSTGRES_DB=universal_ai_tools_test
POSTGRES_HOST=postgres
POSTGRES_PORT=5432

# PostgreSQL Performance Tuning
POSTGRES_MAX_CONNECTIONS=200
POSTGRES_SHARED_BUFFERS=512MB
POSTGRES_EFFECTIVE_CACHE_SIZE=2GB

# Database URL (Auto-constructed in Docker)
DATABASE_URL=postgresql://postgres:test-postgres-password-2024@postgres:5432/universal_ai_tools_test

# =================================================================
# CRITICAL: Admin Passwords (Required for Docker services)
# =================================================================

# pgAdmin Configuration (REQUIRED for pgAdmin service)
PGADMIN_EMAIL=admin@test.local
PGADMIN_PASSWORD=test-pgadmin-password-2024

# Grafana Configuration (REQUIRED for Grafana service)
GRAFANA_ADMIN_USER=admin
GRAFANA_ADMIN_PASSWORD=test-grafana-password-2024

# =================================================================
# CRITICAL: Supabase Configuration (Mock for testing)
# =================================================================
SUPABASE_URL=https://test-project-id.supabase.co
SUPABASE_ANON_KEY=test-supabase-anon-key-for-docker-testing
SUPABASE_SERVICE_ROLE_KEY=test-supabase-service-role-key-for-docker-testing
DISABLE_SUPABASE_IN_TESTS=true

# =================================================================
# CRITICAL: Security Configuration (Required)
# =================================================================

# JWT Secret (Test value)
JWT_SECRET=test-jwt-secret-for-docker-deployment-testing-32-chars
JWT_EXPIRES_IN=24h

# Encryption Keys
ENCRYPTION_KEY=test-encryption-key-minimum-32-characters-required-for-testing
TOKEN_ENCRYPTION_KEY=test-token-encryption-key-for-docker-security-testing

# =================================================================
# CRITICAL: AI API Keys (Mock for testing)
# =================================================================
OPENAI_API_KEY=sk-test-openai-api-key-for-docker-testing
ANTHROPIC_API_KEY=sk-ant-test-anthropic-api-key-for-docker-testing
GOOGLE_AI_API_KEY=test-google-ai-api-key-for-docker-testing

# =================================================================
# Application Configuration
# =================================================================
NODE_ENV=production
PORT=9999
HOST=0.0.0.0
LOG_LEVEL=info

# =================================================================
# Performance & Memory Settings (Docker Optimized)
# =================================================================
MAX_CONCURRENT_REQUESTS=50
REQUEST_TIMEOUT=30000
MEMORY_CACHE_SIZE=512

# Memory monitoring settings
MEMORY_MONITORING_INTERVAL=120000
GC_INTERVAL_MS=120000
CACHE_CLEANUP_INTERVAL_MS=180000

# =================================================================
# Feature Flags (Docker Optimized)
# =================================================================
DISABLE_HEAVY_SERVICES=true
SKIP_STARTUP_CONTEXT=true
ENABLE_CONTEXT_MIDDLEWARE=false
ENABLE_MLX=false
ENABLE_VISION=false

# Vision Configuration
ENABLE_SDXL_REFINER=false
VISION_BACKEND=auto
VISION_MAX_VRAM=20
VISION_ENABLE_CACHING=true

# =================================================================
# Redis Configuration (Docker Internal)
# =================================================================
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0
REDIS_POOL_SIZE=10
REDIS_CONNECTION_TIMEOUT=5000
REDIS_COMMAND_TIMEOUT=5000
REDIS_ENABLE_OFFLINE_QUEUE=true
REDIS_ENABLE_AUTORESYNC=true

# =================================================================
# Monitoring & Telemetry
# =================================================================
ENABLE_TELEMETRY=true
ENABLE_HEALTH_CHECKS=true
METRICS_PORT=9091

# =================================================================
# Security Settings (Production Ready)
# =================================================================
CORS_ORIGIN=http://localhost:3000,http://localhost:9999,http://localhost:80,http://localhost:443
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# =================================================================
# Ollama Local LLM (Docker Internal)
# =================================================================
OLLAMA_BASE_URL=http://ollama:11434
OLLAMA_URL=http://ollama:11434
OLLAMA_MODEL=llama3.2:3b

# LM Studio URL (External)
LM_STUDIO_URL=http://host.docker.internal:1234

# =================================================================
# Docker Environment Detection (Auto-set)
# =================================================================
DOCKER_ENV=true
CONTAINER_NAME=universal-ai-tools
ENABLE_CONTAINER_OPTIMIZATION=true