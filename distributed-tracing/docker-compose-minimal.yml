# Minimal Working Tracing Stack
# Start with just the essentials that actually work

services:
  # Jaeger All-in-One (includes collector, query, and UI)
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: uat-jaeger
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "16686:16686"  # Jaeger UI
      - "4317:4317"    # OTLP gRPC
      - "4318:4318"    # OTLP HTTP
    networks:
      - tracing

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: uat-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - tracing

  # Grafana (without broken provisioning)
  grafana:
    image: grafana/grafana:latest
    container_name: uat-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_BASIC_ENABLED=false
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - tracing

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: uat-prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    volumes:
      - ./prometheus-minimal.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - tracing

networks:
  tracing:
    driver: bridge

volumes:
  qdrant_data:
  grafana_data:
  prometheus_data: