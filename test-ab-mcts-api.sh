#!/bin/bash

# AB-MCTS API Test Script
# Tests the API endpoints directly

echo "üöÄ AB-MCTS API Endpoint Test"
echo "=========================================="

# Check if server is running
echo -e "\nüì° Checking server status..."
if curl -s http://localhost:9999/health > /dev/null 2>&1; then
    echo "‚úÖ Server is running"
else
    echo "‚ùå Server is not running. Please start with: npm run dev"
    exit 1
fi

# Test 1: Health check
echo -e "\n1Ô∏è‚É£ Testing AB-MCTS health endpoint..."
curl -s http://localhost:9999/api/v1/ab-mcts/health | jq '.' || echo "‚ùå Health check failed"

# Test 2: Get metrics
echo -e "\n2Ô∏è‚É£ Testing metrics endpoint..."
curl -s http://localhost:9999/api/v1/ab-mcts/metrics | jq '.' || echo "‚ùå Metrics retrieval failed"

# Test 3: Simple orchestration
echo -e "\n3Ô∏è‚É£ Testing orchestration endpoint..."
curl -s -X POST http://localhost:9999/api/v1/ab-mcts/orchestrate \
  -H "Content-Type: application/json" \
  -d '{
    "userRequest": "Create a simple hello world function",
    "options": {
      "useCache": false,
      "collectFeedback": true
    }
  }' | jq '.' || echo "‚ùå Orchestration failed"

# Test 4: Get models
echo -e "\n4Ô∏è‚É£ Testing models endpoint..."
curl -s "http://localhost:9999/api/v1/ab-mcts/models?taskType=general" | jq '.' || echo "‚ùå Models retrieval failed"

# Test 5: Get report
echo -e "\n5Ô∏è‚É£ Testing report endpoint..."
curl -s http://localhost:9999/api/v1/ab-mcts/report | jq '.' || echo "‚ùå Report generation failed"

echo -e "\n=========================================="
echo "‚úÖ API test complete!"