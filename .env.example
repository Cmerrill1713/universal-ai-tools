# Universal AI Tools - Environment Configuration Template
# Copy this file to .env and fill in your actual values
# Last Updated: August 18, 2025

# =================================================================
# Database Configuration (Required)
# =================================================================

# PostgreSQL Database Settings
POSTGRES_USER=postgres
POSTGRES_PASSWORD=your-secure-postgres-password
POSTGRES_DB=universal_ai_tools
POSTGRES_HOST=localhost
POSTGRES_PORT=5432

# =================================================================
# Vector Database Configuration (Qdrant)
# =================================================================
# Qdrant for semantic search and vector storage
QDRANT_URL=http://localhost:6333
QDRANT_GRPC_URL=http://localhost:6334
QDRANT_API_KEY=
QDRANT_COLLECTION_NAME=universal_ai_vectors

# Qdrant Performance Settings
QDRANT_VECTOR_SIZE=1536
QDRANT_DISTANCE_METRIC=cosine
QDRANT_INDEX_TYPE=hnsw
QDRANT_BATCH_SIZE=100
QDRANT_TIMEOUT_MS=30000

# PostgreSQL Performance Tuning (Optional)
POSTGRES_MAX_CONNECTIONS=200
POSTGRES_SHARED_BUFFERS=256MB
POSTGRES_EFFECTIVE_CACHE_SIZE=1GB

# Database URL (Auto-constructed from above values in Docker)
DATABASE_URL=postgresql://postgres:your-secure-postgres-password@localhost:5432/universal_ai_tools

# =================================================================
# Supabase Configuration (Required)
# =================================================================
# For local development, use these default values:
# SUPABASE_URL=http://127.0.0.1:54321
# SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0
# SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU

# For production, use your actual Supabase project:
SUPABASE_URL=https://your-project-id.supabase.co
SUPABASE_ANON_KEY=your-supabase-anon-key
SUPABASE_SERVICE_ROLE_KEY=your-supabase-service-role-key

# =================================================================
# AI API Keys (Required for AI features)
# =================================================================
OPENAI_API_KEY=sk-your-openai-api-key
ANTHROPIC_API_KEY=sk-ant-your-anthropic-api-key
GOOGLE_AI_API_KEY=your-google-ai-api-key

# =================================================================
# Security Configuration (Required)
# =================================================================

# JWT Secret (Generate with: openssl rand -hex 32)
JWT_SECRET=your-super-secret-jwt-key-here
JWT_EXPIRES_IN=24h

# Encryption Keys
ENCRYPTION_KEY=your-encryption-key-here-minimum-32-characters
TOKEN_ENCRYPTION_KEY=your-token-encryption-key-here

# =================================================================
# Redis Configuration (Optional - uses defaults if not set)
# =================================================================
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0
REDIS_POOL_SIZE=10
REDIS_CONNECTION_TIMEOUT=5000
REDIS_COMMAND_TIMEOUT=5000
REDIS_ENABLE_OFFLINE_QUEUE=true
REDIS_ENABLE_AUTORESYNC=true

# =================================================================
# Knowledge Graph Configuration (Neo4j + Qdrant Hybrid)
# =================================================================
# Neo4j for graph relationships
NEO4J_URI=bolt://localhost:7687
NEO4J_USER=neo4j
NEO4J_PASSWORD=password
NEO4J_DATABASE=neo4j

# Hybrid GraphRAG Settings
ENABLE_HYBRID_GRAPHRAG=true
GRAPHRAG_USE_QDRANT=true
GRAPHRAG_USE_NEO4J=true
GRAPHRAG_SYNC_MODE=atomic
GRAPHRAG_CACHE_TTL=3600

# =================================================================
# Application Configuration
# =================================================================
NODE_ENV=development
PORT=9999
HOST=localhost
LOG_LEVEL=info

# =================================================================
# Performance & Memory Settings
# =================================================================
MAX_CONCURRENT_REQUESTS=50
REQUEST_TIMEOUT=30000
MEMORY_CACHE_SIZE=512

# Memory monitoring settings
MEMORY_MONITORING_INTERVAL=120000
GC_INTERVAL_MS=120000
CACHE_CLEANUP_INTERVAL_MS=180000

# =================================================================
# HTTP Timeout Configuration (Connection Stability)
# =================================================================
# Server-level timeout settings for improved connection stability
# These settings prevent connection drops under sustained load

# Keep-alive timeout (3 minutes) - how long to keep connections open
HTTP_KEEP_ALIVE_TIMEOUT=180000

# Headers timeout (3 minutes + 1s) - must be slightly longer than keep-alive
HTTP_HEADERS_TIMEOUT=181000

# Request timeout (5 minutes) - maximum time for a single request
HTTP_REQUEST_TIMEOUT=300000

# Socket timeout (5 minutes) - overall socket timeout
HTTP_SOCKET_TIMEOUT=300000

# Maximum concurrent connections
HTTP_MAX_CONNECTIONS=1000

# Graceful shutdown drain timeout (30 seconds)
HTTP_SHUTDOWN_DRAIN_TIMEOUT=30000

# =================================================================
# Feature Flags
# =================================================================
DISABLE_HEAVY_SERVICES=false
SKIP_STARTUP_CONTEXT=false
ENABLE_CONTEXT_MIDDLEWARE=true
ENABLE_MLX=true
ENABLE_VISION=true

# =================================================================
# AI Model Development Configuration
# =================================================================
# Set to true to force mock mode for development (when model files not available)
LFM2_FORCE_MOCK=false
MLX_FORCE_MOCK=false

# LFM2 Fast Coordinator Configuration
LFM2_MAX_PENDING=25
LFM2_TIMEOUT_MS=8000
LFM2_MAX_CONCURRENCY=1
LFM2_MAX_TOKENS=256
LFM2_MAX_PROMPT_CHARS=2000

# MLX Apple Silicon Configuration  
MLX_TIMEOUT_MS=30000

# DSPy Orchestrator
ENABLE_DSPY=true
DSPY_PORT=8766

# Vision Configuration (SDXL Refiner Integration)
ENABLE_SDXL_REFINER=false
SDXL_REFINER_PATH=/Users/christianmerrill/Downloads/stable-diffusion-xl-refiner-1.0-Q4_1.gguf
VISION_BACKEND=auto
VISION_MAX_VRAM=20
VISION_ENABLE_CACHING=true

# =================================================================
# Monitoring & Telemetry
# =================================================================
ENABLE_TELEMETRY=true
ENABLE_HEALTH_CHECKS=true
METRICS_PORT=9091

# =================================================================
# Security Settings
# =================================================================
CORS_ORIGIN=*
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# =================================================================
# Local LLM Services (Optional - Choose One or Both)
# =================================================================

# Ollama Configuration
OLLAMA_BASE_URL=http://localhost:11434
OLLAMA_URL=http://localhost:11434
OLLAMA_MODEL=llama3.2:3b

# LM Studio Configuration
LM_STUDIO_URL=http://localhost:1234
LM_STUDIO_MODEL=llama-3.2-3b-instruct

# =================================================================
# Pixel Streaming Configuration (Optional)
# =================================================================
PIXEL_STREAMING_URL=ws://127.0.0.1:8888

# =================================================================
# Development Settings (Override for development)
# =================================================================
# Development Mock Keys (only for development environment)
DEVELOPMENT_MOCK_API_KEY=dev-mock-key-for-testing

# Uncomment these for faster development startup:
# DISABLE_HEAVY_SERVICES=true
# SKIP_STARTUP_CONTEXT=true
# ENABLE_CONTEXT_MIDDLEWARE=false

# =================================================================
# Docker-specific Settings (Required for Docker deployment)
# =================================================================

# Administrative Passwords (REQUIRED for Docker services)
PGADMIN_EMAIL=admin@example.com
PGADMIN_PASSWORD=secure-pgadmin-password

# Grafana Admin Configuration (REQUIRED for monitoring)
GRAFANA_ADMIN_USER=admin
GRAFANA_ADMIN_PASSWORD=secure-grafana-password

# Docker Environment Detection (Automatically set in containers)
# DOCKER_ENV=true
# CONTAINER_NAME=universal-ai-tools
# ENABLE_CONTAINER_OPTIMIZATION=true
