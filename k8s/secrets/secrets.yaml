# NOTE: This file contains placeholders for secrets.
# In production, use external secret management tools like:
# - AWS Secrets Manager
# - HashiCorp Vault
# - Kubernetes External Secrets Operator
# - Sealed Secrets

apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: universal-ai-tools
  labels:
    app: postgres
    tier: database
type: Opaque
data:
  # PLACEHOLDER: Replace with base64 encoded values
  password: Q0hBTkdFX01FX1RPX1NUUk9OR19QQVNTV09SRA== # CHANGE_ME_TO_STRONG_PASSWORD (base64)
  database-url: cG9zdGdyZXNxbDovL3Bvc3RncmVzOkNIQU5HRV9NRV9UT19TVFJPTkdfUEFTU1dPUkRAcG9zdGdyZXM6NTQzMi91bml2ZXJzYWxfYWlfdG9vbHM= # Full DB URL (base64)
---
apiVersion: v1
kind: Secret
metadata:
  name: neo4j-secret
  namespace: universal-ai-tools
  labels:
    app: neo4j
    tier: database
type: Opaque
data:
  # PLACEHOLDER: Replace with base64 encoded values
  password: Q0hBTkdFX01FX1RPX1NUUk9OR19QQVNTV09SRA== # CHANGE_ME_TO_STRONG_PASSWORD (base64)
  auth: bmVvNGo6Q0hBTkdFX01FX1RPX1NUUk9OR19QQVNTV09SRA== # neo4j:CHANGE_ME_TO_STRONG_PASSWORD (base64)
---
apiVersion: v1
kind: Secret
metadata:
  name: grafana-secret
  namespace: uai-monitoring
  labels:
    app: grafana
    tier: monitoring
type: Opaque
data:
  # PLACEHOLDER: Replace with base64 encoded values
  admin-password: Q0hBTkdFX01FX1RPX1NUUk9OR19QQVNTV09SRA== # CHANGE_ME_TO_STRONG_PASSWORD (base64)
---
apiVersion: v1
kind: Secret
metadata:
  name: jwt-secret
  namespace: universal-ai-tools
  labels:
    app: universal-ai-tools
    tier: security
type: Opaque
data:
  # PLACEHOLDER: Replace with base64 encoded 256-bit random secret
  jwt-secret: Q0hBTkdFX01FX1RPXzI1Nl9CSVRfUkFORE9NX1NFQ1JFVA== # CHANGE_ME_TO_256_BIT_RANDOM_SECRET (base64)
---
apiVersion: v1
kind: Secret
metadata:
  name: api-keys
  namespace: universal-ai-tools
  labels:
    app: universal-ai-tools
    tier: integration
type: Opaque
data:
  # PLACEHOLDER: Replace with base64 encoded API keys
  anthropic-api-key: Q0hBTkdFX01FX1RPX0FDVFVBTF9BTlRIUk9QSUNfS0VZ # CHANGE_ME_TO_ACTUAL_ANTHROPIC_KEY (base64)
  openai-api-key: Q0hBTkdFX01FX1RPX0FDVFVBTF9PUEVOQVVFWSVZ # CHANGE_ME_TO_ACTUAL_OPENAI_KEY (base64)
---
# TLS Certificate Secret Template
# Use cert-manager for automatic certificate provisioning
apiVersion: v1
kind: Secret
metadata:
  name: tls-certificate
  namespace: universal-ai-tools
  labels:
    app: universal-ai-tools
    tier: security
type: kubernetes.io/tls
data:
  # PLACEHOLDER: Replace with actual certificate data
  tls.crt: LS0tLS1CRUdJTi... # Certificate (base64)
  tls.key: LS0tLS1CRUdJTi... # Private key (base64)