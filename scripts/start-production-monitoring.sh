#!/bin/bash

# Universal AI Tools - Production Monitoring Startup Script
# This script starts the complete monitoring stack for Phase 4 production deployment

set -e

echo "üöÄ Starting Universal AI Tools Production Monitoring Stack..."

# Check if docker-compose is available
if ! command -v docker-compose &> /dev/null; then
    echo "‚ùå docker-compose is not installed. Please install Docker Compose first."
    exit 1
fi

# Check if docker is running
if ! docker info &> /dev/null; then
    echo "‚ùå Docker is not running. Please start Docker first."
    exit 1
fi

# Set environment variables if not already set
export GRAFANA_USER=${GRAFANA_USER:-admin}
export GRAFANA_PASSWORD=${GRAFANA_PASSWORD:-admin123}
export PROMETHEUS_RETENTION=${PROMETHEUS_RETENTION:-30d}
export LOG_LEVEL=${LOG_LEVEL:-info}

echo "üìä Starting monitoring services..."

# Start the full production stack with monitoring
docker-compose -f docker-compose.production.yml --profile monitoring up -d

echo "‚è≥ Waiting for services to be ready..."

# Wait for Prometheus to be ready
echo "üìä Checking Prometheus..."
timeout=60
while ! curl -sf http://localhost:9090/-/ready &>/dev/null; do
    if [ $timeout -eq 0 ]; then
        echo "‚ùå Prometheus failed to start within 60 seconds"
        exit 1
    fi
    sleep 1
    ((timeout--))
done
echo "‚úÖ Prometheus is ready"

# Wait for Grafana to be ready
echo "üìà Checking Grafana..."
timeout=60
while ! curl -sf http://localhost:3001/api/health &>/dev/null; do
    if [ $timeout -eq 0 ]; then
        echo "‚ùå Grafana failed to start within 60 seconds"
        exit 1
    fi
    sleep 1
    ((timeout--))
done
echo "‚úÖ Grafana is ready"

# Wait for Universal AI Tools to be ready
echo "ü§ñ Checking Universal AI Tools..."
timeout=120
while ! curl -sf http://localhost:9999/api/health &>/dev/null; do
    if [ $timeout -eq 0 ]; then
        echo "‚ùå Universal AI Tools failed to start within 120 seconds"
        exit 1
    fi
    sleep 2
    ((timeout--))
done
echo "‚úÖ Universal AI Tools is ready"

# Check AlertManager if available
if docker-compose -f docker-compose.production.yml ps | grep -q alertmanager; then
    echo "üö® Checking AlertManager..."
    timeout=30
    while ! curl -sf http://localhost:9093/-/ready &>/dev/null; do
        if [ $timeout -eq 0 ]; then
            echo "‚ö†Ô∏è  AlertManager not ready, continuing..."
            break
        fi
        sleep 1
        ((timeout--))
    done
    if [ $timeout -gt 0 ]; then
        echo "‚úÖ AlertManager is ready"
    fi
fi

echo ""
echo "üéâ Production Monitoring Stack is Ready!"
echo ""
echo "üìä Access your monitoring services:"
echo "   ‚Ä¢ Universal AI Tools:    http://localhost:9999"
echo "   ‚Ä¢ Grafana Dashboards:    http://localhost:3001 (${GRAFANA_USER}/${GRAFANA_PASSWORD})"
echo "   ‚Ä¢ Prometheus:            http://localhost:9090"
echo "   ‚Ä¢ AlertManager:          http://localhost:9093"
echo ""
echo "üìà Key Performance URLs:"
echo "   ‚Ä¢ Health Check:          http://localhost:9999/api/health"
echo "   ‚Ä¢ Metrics Endpoint:      http://localhost:9999/metrics"
echo "   ‚Ä¢ API Status:            http://localhost:9999/api/v1/health"
echo ""
echo "üì± Phase 4 Production Dashboard:"
echo "   ‚Ä¢ Phase 4 Dashboard:     http://localhost:3001/d/phase4-production"
echo "   ‚Ä¢ System Overview:       http://localhost:3001/d/universal-ai-tools"
echo ""

# Show running containers
echo "üê≥ Running Containers:"
docker-compose -f docker-compose.production.yml --profile monitoring ps

echo ""
echo "üìù Monitoring Log Locations:"
echo "   ‚Ä¢ Application Logs:      ./logs/"
echo "   ‚Ä¢ Prometheus Data:       Docker Volume: prometheus_data"
echo "   ‚Ä¢ Grafana Data:          Docker Volume: grafana_data"
echo ""
echo "üö® To view real-time logs:"
echo "   docker-compose -f docker-compose.production.yml logs -f universal-ai-tools"
echo ""
echo "‚öôÔ∏è  To stop monitoring stack:"
echo "   docker-compose -f docker-compose.production.yml --profile monitoring down"
echo ""
echo "‚ú® Phase 4 Production Monitoring Setup Complete!"