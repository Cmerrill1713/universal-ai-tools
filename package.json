{
  "name": "universal-ai-tools",
  "version": "1.0.0",
  "description": "Local-first AI assistant optimized for single-user offline operation",
  "main": "go-api-gateway/main",
  "type": "module",
  "scripts": {
    "dev": "cd go-api-gateway && UAT_SERVER_PORT=8082 UAT_ENVIRONMENT=development UAT_SECURITY_JWT_SECRET=${UAT_SECURITY_JWT_SECRET:-dev-local-secret} UAT_SECURITY_REQUIRE_AUTH=false ./main",
    "dev:go": "cd go-api-gateway && UAT_SERVER_PORT=8082 UAT_ENVIRONMENT=development UAT_SECURITY_JWT_SECRET=${UAT_SECURITY_JWT_SECRET:-dev-local-secret} UAT_SECURITY_REQUIRE_AUTH=false ./main",
    "dev:legacy": "NODE_ENV=development tsx watch src/server.ts",
    "dev:local": "cd go-api-gateway && UAT_SERVER_PORT=8082 UAT_ENVIRONMENT=development UAT_SECURITY_JWT_SECRET=${UAT_SECURITY_JWT_SECRET:-dev-local-secret} UAT_SECURITY_REQUIRE_AUTH=false ./main",
    "services:start": "./scripts/start-unified-services.sh start",
    "services:stop": "./scripts/start-unified-services.sh stop",
    "services:status": "./scripts/start-unified-services.sh status",
    "services:restart": "./scripts/start-unified-services.sh restart",
    "build": "cd go-api-gateway && go build ./cmd/main.go",
    "build:go": "cd go-api-gateway && go build ./cmd/main.go",
    "build:rust": "cd rust-services/llm-router && cargo build --release",
    "build:legacy": "tsc && node scripts/post-build.js",
    "build:migration": "tsc -p tsconfig.migration.json",
    "build:prod": "cd go-api-gateway && go build -ldflags='-s -w' ./cmd/main.go",
    "build:docker": "cd go-api-gateway && go build -ldflags='-s -w' ./cmd/main.go",
    "start": "cd go-api-gateway && UAT_SERVER_PORT=8082 UAT_ENVIRONMENT=production ./main",
    "start:prod": "cd go-api-gateway && UAT_SERVER_PORT=8082 UAT_ENVIRONMENT=production ./main",
    "start:legacy": "NODE_ENV=production node dist/server.js",
    "test": "NODE_OPTIONS='--max-old-space-size=4096' NODE_ENV=test jest --detectOpenHandles --forceExit --maxWorkers=2",
    "test:memory": "./scripts/test-with-memory.sh all",
    "test:unit": "NODE_OPTIONS='--max-old-space-size=4096' NODE_ENV=test jest --testPathPattern=src --detectOpenHandles --forceExit --maxWorkers=2",
    "test:unit:memory": "./scripts/test-with-memory.sh unit",
    "test:integration": "NODE_OPTIONS='--max-old-space-size=4096' NODE_ENV=test jest --testPathPattern=tests/integration --detectOpenHandles --forceExit --runInBand",
    "test:api": "NODE_OPTIONS='--max-old-space-size=4096' NODE_ENV=test jest --testPathPattern=tests/api --detectOpenHandles --forceExit --maxWorkers=2",
    "test:middleware": "NODE_OPTIONS='--max-old-space-size=4096' NODE_ENV=test jest --testPathPattern=tests/middleware --detectOpenHandles --forceExit --maxWorkers=2",
    "test:security": "NODE_OPTIONS='--max-old-space-size=4096' NODE_ENV=test jest --testPathPattern=tests/security --detectOpenHandles --forceExit --maxWorkers=2",
    "test:agents": "NODE_OPTIONS='--max-old-space-size=4096' NODE_ENV=test jest --testPathPattern=tests/agents --detectOpenHandles --forceExit --maxWorkers=2",
    "test:database": "NODE_OPTIONS='--max-old-space-size=4096' NODE_ENV=test jest --testPathPattern=tests/database --detectOpenHandles --forceExit --maxWorkers=2",
    "test:error-handling": "NODE_OPTIONS='--max-old-space-size=4096' NODE_ENV=test jest --testPathPattern=tests/error-handling --detectOpenHandles --forceExit --maxWorkers=2",
    "test:performance": "NODE_OPTIONS='--max-old-space-size=4096' NODE_ENV=test jest --testPathPattern=tests/performance --detectOpenHandles --forceExit --maxWorkers=2",
    "test:watch": "NODE_OPTIONS='--max-old-space-size=4096' NODE_ENV=test jest --watch --detectOpenHandles",
    "test:coverage": "NODE_OPTIONS='--max-old-space-size=4096' NODE_ENV=test jest --coverage --detectOpenHandles --forceExit --maxWorkers=2",
    "lint": "eslint src --ext .ts,.js,.mjs --fix",
    "lint:check": "eslint src --ext .ts,.js,.mjs",
    "typecheck": "tsc --noEmit",
    "typecheck:watch": "tsc --noEmit --watch",
    "clean": "rimraf dist coverage .jest-cache",
    "clean:all": "rimraf dist coverage .jest-cache node_modules package-lock.json",
    "docker:build": "docker build -f Dockerfile.prod -t universal-ai-tools:latest .",
    "docker:build:prod": "docker build -f Dockerfile.prod --target production -t universal-ai-tools:production .",
    "docker:run": "docker run -p 9999:9999 --env-file .env.production universal-ai-tools:latest",
    "docker:compose:up": "docker-compose -f docker-compose.prod.yml up -d",
    "docker:compose:down": "docker-compose -f docker-compose.prod.yml down",
    "scrape:docs": "tsx ../src/scripts/scrape-documentation.ts",
    "scrape:docs:all": "tsx ../src/scripts/scrape-documentation.ts",
    "scrape:expanded": "tsx ../src/scripts/scrape-all-documentation.ts",
    "db:migrate": "cd supabase && supabase migration up",
    "docker:compose:logs": "docker-compose -f docker-compose.prod.yml logs -f",
    "deploy:prod": "./scripts/deploy-production.sh",
    "deploy:validate": "./scripts/validate-deployment.sh",
    "validate:distributed-system": "tsx scripts/validate-distributed-system.ts",
    "setup:prod": "./scripts/setup-production.sh",
    "setup:ssl": "./scripts/setup-ssl.sh",
    "health:check": "curl -f http://localhost:9999/health || exit 1",
    "monitoring:start": "docker-compose -f docker-compose.monitoring.yml up -d",
    "monitoring:stop": "docker-compose -f docker-compose.monitoring.yml down",
    "benchmark": "node scripts/benchmark-performance.js",
    "optimize:memory": "node scripts/memory-optimization.js",
    "migration:up": "node scripts/run-migrations.js up",
    "migration:down": "node scripts/run-migrations.js down",
    "seed:dev": "NODE_ENV=development node scripts/seed-database.js",
    "backup:create": "node scripts/create-backup.js",
    "backup:restore": "node scripts/restore-backup.js",
    "security:audit": "npm audit && node scripts/security-check.js",
    "scrape:huggingface:all": "node scripts/scrape-all-huggingface-datasets.js",
    "scrape:huggingface:test": "node scripts/test-dataset-scraping.js",
    "scrape:parallel": "npx tsx parallel-dataset-scraper.ts",
    "scrape:parallel:test": "npx tsx parallel-dataset-scraper.ts --test",
    "scrape:parallel:fast": "npx tsx parallel-dataset-scraper.ts --workers 100",
    "scrape:ultrafast": "npx tsx fast-parallel-scraper.ts",
    "scrape:ultrafast:test": "npx tsx fast-parallel-scraper.ts --test",
    "scrape:ultrafast:max": "npx tsx fast-parallel-scraper.ts --concurrency 200",
    "logs:tail": "tail -f logs/app.log",
    "logs:error": "tail -f logs/error.log",
    "precommit": "npm run lint && npm run typecheck && npm run test:unit",
    "postinstall": "node scripts/post-install-setup.js"
  },
  "keywords": [
    "ai",
    "assistant",
    "local-first",
    "offline",
    "mlx",
    "ollama"
  ],
  "author": "Universal AI Tools Team",
  "license": "MIT",
  "dependencies": {
    "@anthropic-ai/sdk": "^0.27.0",
    "@apollo/server": "^5.0.0",
    "@as-integrations/express4": "^1.1.2",
    "@modelcontextprotocol/sdk": "^1.17.3",
    "@opentelemetry/auto-instrumentations-node": "^0.62.1",
    "@opentelemetry/exporter-metrics-otlp-http": "^0.203.0",
    "@qdrant/js-client-rest": "^1.15.1",
    "@supabase/supabase-js": "^2.56.0",
    "@types/cheerio": "^0.22.35",
    "@types/multer": "^2.0.0",
    "@types/pg": "^8.15.5",
    "@types/socket.io-client": "^1.4.36",
    "@types/uuid": "^10.0.0",
    "axios": "^1.11.0",
    "bcryptjs": "^2.4.3",
    "cheerio": "^1.1.2",
    "cors": "^2.8.5",
    "dotenv": "^16.6.1",
    "express": "^4.18.2",
    "helmet": "^7.1.0",
    "ioredis": "^5.7.0",
    "joi": "^17.11.0",
    "jsonwebtoken": "^9.0.2",
    "limiter": "^3.0.0",
    "marked": "^16.2.0",
    "mongoose": "^8.0.0",
    "multer": "^2.0.2",
    "neo4j-driver": "^5.28.1",
    "node-fetch": "^3.3.2",
    "pg": "^8.16.3",
    "prom-client": "^15.1.3",
    "redis": "^4.6.10",
    "socket.io": "^4.7.5",
    "socket.io-client": "^4.8.1",
    "uuid": "^11.1.0",
    "winston": "^3.11.0",
    "ws": "^8.18.3",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@playwright/test": "^1.55.0",
    "@types/bcryptjs": "^2.4.5",
    "@types/cors": "^2.8.15",
    "@types/express": "^4.17.17",
    "@types/jest": "^29.5.5",
    "@types/jsonwebtoken": "^9.0.4",
    "@types/node": "^20.8.0",
    "@types/supertest": "^6.0.3",
    "@types/ws": "^8.5.7",
    "@typescript-eslint/eslint-plugin": "^6.7.0",
    "@typescript-eslint/parser": "^6.7.0",
    "eslint": "^8.50.0",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-security": "^3.0.1",
    "jest": "^29.7.0",
    "nodemon": "^3.0.1",
    "playwright": "^1.55.0",
    "prettier": "^3.0.3",
    "supertest": "^7.1.4",
    "ts-jest": "^29.1.1",
    "tsx": "^4.0.0",
    "typescript": "^5.2.0"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/your-org/universal-ai-tools.git"
  },
  "bugs": {
    "url": "https://github.com/your-org/universal-ai-tools/issues"
  },
  "homepage": "https://github.com/your-org/universal-ai-tools#readme"
}
