# Gitleaks configuration for universal-ai-tools project

title = "Gitleaks config for universal-ai-tools"

[extend]
# Use the default config as a base
useDefault = true

# Allow list for project-specific patterns
[allowlist]
description = "Allow project-specific patterns"
regexes = [
    '''(password|secret|key|token)\s*[:=]\s*["\']?(test|demo|example|dummy|placeholder|changeme|your-.*|my-.*)["\']?''',
    '''<[A-Z_]+>''',
    '''\$\{[A-Z_]+\}''',
    '''process\.env\.[A-Z_]+''',
    # Development localhost URLs and ports
    '''(https?://)?localhost(:[0-9]+)?(/.*)?''',
    '''(https?://)?127\.0\.0\.1(:[0-9]+)?(/.*)?''',
    '''(port|PORT)\s*[:=]\s*[0-9]{4,5}''',
    # WebSocket URLs
    '''ws://localhost(:[0-9]+)?(/.*)?''',
    '''wss://localhost(:[0-9]+)?(/.*)?''',
    # Development server configurations
    '''BackendURL.*localhost:[0-9]+''',
    '''baseUrl.*localhost:[0-9]+''',
    '''ollamaUrl.*localhost:[0-9]+''',
    '''healthCheck.*localhost:[0-9]+''',
    # Environment variable references
    '''SUPABASE_URL:.*localhost''',
    '''OLLAMA_BASE_URL.*localhost''',
    # Common development patterns
    '''localhost:[0-9]+/health''',
    '''localhost:[0-9]+/api/.*''',
    '''localhost:[0-9]+/ws/.*''',
    # Test and example API keys (safe patterns)
    '''(test|demo|example|placeholder|sample)-api-key''',
    '''your-api-key''',
    '''sk-1234567890abcdef''',
    '''eyJhbGciOiJIUzI1NiIs\.\.\.''',
    # Supabase demo tokens (publicly known)
    '''eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24i''',
    '''eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9\.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSI''',
    # Documentation example patterns
    '''API_KEY.*=.*sk-.*\.\.\.$''',
    '''SUPABASE_KEY.*=.*eyJhbGciOiJIUzI1NiIs\.\.\.$''',
    # Test authorization headers
    '''X-API-Key.*test-api-key''',
    '''YOUR_SUPABASE_ANON_KEY''',
    '''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''',
    '''BSACQUwb2YuO-_9SfU6K0Q3O-Eey4r3'''
]
paths = [
    # Allow example and test files
    '''.env.example''',
    '''.env.test''',
    '''.env.*.example''',
    '''test/.*\.test\.(ts|js)''',
    '''tests/.*\.test\.(ts|js)''',
    '''__tests__/.*\.(ts|js)''',
    
    # Allow documentation
    '''docs/.*\.md''',
    '''README.*''',
    '''CHANGELOG\.md''',
    
    # Allow configuration templates
    '''docker-compose\..*\.yml''',
    '''scripts/.*\.example''',
    
    # Build artifacts and dependencies
    '''node_modules/.*''',
    '''dist/.*''',
    '''build/.*''',
    '''.next/.*''',
    '''ui/dist/.*''',
    '''ui/build/.*''',
    
    # Python cache
    '''__pycache__/.*''',
    '''\.pyc$''',
    
    # IDE and editor files
    '''\.vscode/.*''',
    '''\.idea/.*''',
    '''\.DS_Store''',
    
    # Temporary and backup files
    '''.*\.backup\..*''',
    '''.*\.bak$''',
    '''.*\.tmp$''',
    '''.*\.swp$''',
    
    # Archive folders
    '''archive/.*''',
    '''old/.*''',
    '''legacy/.*''',
    
    # Log files and output files
    '''.*\.out$''',
    '''.*\.log$''',
    '''prod\.out''',
    '''dev\.out''',
    '''logs/.*''',
    
    # Development configuration files
    '''docker-compose.*\.yml''',
    '''Dockerfile.*''',
    '''.*\.development\..*''',
    '''.*\.dev\..*''',
    
    # Swift/iOS development files
    '''.*\.swift$''',
    '''macOS-App/.*''',
    '''iOS Working App/.*''',
    '''clients/.*''',
    
    # Test and example files
    '''tests/.*''',
    '''test-.*''',
    '''examples/.*''',
    '''.*example.*''',
    '''.*test.*''',
    '''.*demo.*''',
    '''.*sample.*''',
    
    # Documentation and script files
    '''.*\.md$''',
    '''.*\.sh$''',
    '''.*GUIDE.*''',
    '''.*DOCUMENTATION.*''',
    '''.*SETUP.*''',
    '''start-.*''',
    '''quick-.*''',
    '''restart-.*''',
    
    # Configuration files
    '''env\..*''',
    '''\.env\..*''',
    '''config/.*''',
    '''supabase/.*'''
]

# Project-specific rules (disabled - replaced with better allowlist)
# These rules were causing false positives with legitimate development configurations

# We disable the problematic rules and rely on the default gitleaks config
# with a comprehensive allowlist instead

# Additional custom rules for AI/ML specific patterns
[[rules]]
id = "model-api-keys"
description = "Detect AI model API keys"
regex = '''(sk-|key-|api_key_|apikey_)(proj-)?[a-zA-Z0-9]{20,}'''
tags = ["key", "ai"]

[[rules]]
id = "huggingface-tokens"
description = "Detect HuggingFace API tokens"
regex = '''hf_[a-zA-Z0-9]{30,}'''
tags = ["key", "huggingface"]

[[rules]]
id = "jwt-secrets"
description = "Detect JWT secrets in config"
regex = '''(jwt_secret|JWT_SECRET|jwtSecret)\s*[:=]\s*["\']?[a-zA-Z0-9+/=]{16,}["\']?'''
tags = ["secret", "jwt"]
[rules.allowlist]
regexes = [
    '''(jwt_secret|JWT_SECRET|jwtSecret)\s*[:=]\s*["\']?(your-secret-key|change-this-secret|example-secret)["\']?'''
]

# Ignore certain file patterns completely
[ignore]
# Ignore build and dependency directories
paths = [
    '''node_modules''',
    '''dist''',
    '''build''',
    '''.next''',
    '''coverage''',
    '''__pycache__''',
    '''*.pyc''',
    '''.git''',
    '''.vscode''',
    '''.idea''',
    # Additional patterns to ignore
    '''*.out''',
    '''*.log''',
    '''logs''',
    '''prod.out''',
    '''dev.out''',
    '''cache''',
    '''.cache''',
    '''tmp''',
    '''.tmp''',
    '''backups''',
    '''archive''',
    '''legacy''',
    '''old'''
]


# Configuration for entropy checks
[entropy]
# Lower entropy threshold for shorter strings
minLength = 20
# Higher threshold for longer strings to reduce false positives
threshold = 4.5