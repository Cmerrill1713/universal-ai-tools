# Personal Dockerfile for Universal AI Tools
# Optimized for macOS Docker Desktop personal use

FROM node:20-alpine AS base

# Install system dependencies including Python for DSPy
RUN apk add --no-cache \
    python3 \
    py3-pip \
    make \
    g++ \
    git \
    && ln -sf python3 /usr/bin/python

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY tsconfig.json ./

# Install dependencies
FROM base AS dependencies
RUN npm ci --include=dev

# Install Python dependencies for DSPy orchestrator
FROM dependencies AS python-deps
COPY src/services/dspy-orchestrator/ ./src/services/dspy-orchestrator/

# Create requirements.txt for Python dependencies
RUN cat > requirements.txt << 'EOF'
dspy-ai>=2.4.0
torch>=2.0.0
transformers>=4.30.0
numpy>=1.24.0
pandas>=2.0.0
scikit-learn>=1.3.0
openai>=1.0.0
anthropic>=0.25.0
requests>=2.31.0
pydantic>=2.0.0
fastapi>=0.100.0
uvicorn>=0.23.0
EOF

RUN pip3 install --no-cache-dir -r requirements.txt

# Build stage
FROM python-deps AS build
COPY src/ ./src/
COPY scripts/ ./scripts/

# Build TypeScript
RUN npm run build:prod

# Production stage
FROM base AS production

# Copy built application
COPY --from=build /app/dist ./dist
COPY --from=build /app/node_modules ./node_modules
COPY --from=build /app/src ./src
COPY --from=build /app/scripts ./scripts

# Copy Python environment
COPY --from=python-deps /usr/lib/python3.12/site-packages /usr/lib/python3.12/site-packages

# Create logs directory
RUN mkdir -p logs/screenshots

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nextjs -u 1001

# Change ownership
RUN chown -R nextjs:nodejs /app
USER nextjs

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:9999/health || exit 1

EXPOSE 9999

# Start command
CMD ["npm", "start"]