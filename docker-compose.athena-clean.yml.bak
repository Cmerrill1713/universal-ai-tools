version: '3.8'

services:
  # Core Athena Backend API
  athena-backend:
    image: universal-ai-tools-python-api
    container_name: athena-backend
    restart: unless-stopped
    ports:
      - "8013:8000"  # Main API port
    environment:
      - PYTHONPATH=/app/src:/app:/app/api
      - PYTHONUNBUFFERED=1
    volumes:
      - ./logs:/app/logs:rw
      - ./src:/app/src:ro
      - ./api:/app/api:ro
    networks:
      - athena-network
    depends_on:
      - athena-postgres
      - athena-redis

  # Evolution System API
  athena-evolution:
    image: unified-docker-platform-evolutionary-api
    container_name: athena-evolution
    restart: unless-stopped
    ports:
      - "8014:8005"  # Evolution API port
    networks:
      - athena-network
    depends_on:
      - athena-postgres

  # PostgreSQL Database
  athena-postgres:
    image: postgres:15-alpine
    container_name: athena-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: athena
      POSTGRES_USER: athena
      POSTGRES_PASSWORD: athena123
    volumes:
      - athena_postgres_data:/var/lib/postgresql/data
    networks:
      - athena-network

  # Redis Cache
  athena-redis:
    image: redis:7-alpine
    container_name: athena-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - athena_redis_data:/data
    networks:
      - athena-network

  # Monitoring Stack
  athena-netdata:
    image: netdata/netdata:latest
    container_name: athena-netdata
    restart: unless-stopped
    ports:
      - "19999:19999"
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - netdataconfig:/etc/netdata
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
    networks:
      - athena-network

  athena-prometheus:
    image: prom/prometheus:latest
    container_name: athena-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - athena_prometheus_data:/prometheus
    networks:
      - athena-network

  athena-grafana:
    image: grafana/grafana:latest
    container_name: athena-grafana
    restart: unless-stopped
    ports:
      - "3002:3000"  # Grafana on 3002 (3000 reserved for frontend)
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - athena_grafana_data:/var/lib/grafana
    networks:
      - athena-network

  # Exporters for Monitoring
  athena-node-exporter:
    image: prom/node-exporter:latest
    container_name: athena-node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - athena-network

  athena-redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: athena-redis-exporter
    restart: unless-stopped
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis://athena-redis:6379
    networks:
      - athena-network

  athena-postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: athena-postgres-exporter
    restart: unless-stopped
    ports:
      - "9187:9187"
    environment:
      - DATA_SOURCE_NAME=postgresql://athena:athena123@athena-postgres:5432/athena?sslmode=disable
    networks:
      - athena-network

volumes:
  athena_postgres_data:
  athena_redis_data:
  athena_prometheus_data:
  athena_grafana_data:
  netdataconfig:
  netdatalib:
  netdatacache:

networks:
  athena-network:
    driver: bridge
