version: '3.8'

services:
  # =============================================================================
  # EXISTING SERVICES (Enhanced with Grounding)
  # =============================================================================

  # Supabase Database (Enhanced with Knowledge Grounding)
  supabase-db:
    image: supabase/postgres:15.1.0.147
    container_name: supabase-db-grounded
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - ./supabase/migrations:/docker-entrypoint-initdb.d
      - supabase-data:/var/lib/postgresql/data
      - ./knowledge-grounding/sql:/docker-entrypoint-initdb.d/knowledge
    networks:
      - integrated-grounding
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Enhanced Chat Service with Knowledge Grounding
  chat-service-grounded:
    build:
      context: ./go-services/chat-service
      dockerfile: Dockerfile.grounded
    container_name: chat-service-grounded
    ports:
      - "8010:8010"
    environment:
      - DATABASE_URL=postgres://postgres:postgres@supabase-db:5432/postgres
      - REDIS_URL=redis://redis-grounded:6379
      - WEAVIATE_URL=http://weaviate-grounded:8080
      - KNOWLEDGE_API_URL=http://knowledge-gateway:8088
      - PROMETHEUS_URL=http://prometheus-grounded:9090
      - LOG_LEVEL=info
    volumes:
      - ./go-services/chat-service:/app
    depends_on:
      - supabase-db
      - redis-grounded
      - weaviate-grounded
      - knowledge-gateway
      - prometheus-grounded
    networks:
      - integrated-grounding
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8010/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Enhanced MLX Service with Knowledge Context
  mlx-service-grounded:
    build:
      context: ./src/services/mlx-http-server
      dockerfile: Dockerfile.grounded
    container_name: mlx-service-grounded
    ports:
      - "8001:8001"
    environment:
      - KNOWLEDGE_API_URL=http://knowledge-gateway:8088
      - REDIS_URL=redis://redis-grounded:6379
      - PROMETHEUS_URL=http://prometheus-grounded:9090
      - MLX_TEMPERATURE=0.75
      - MLX_TOP_P=0.9
      - MLX_MAX_REPETITION_WINDOW=3
    volumes:
      - ./models:/app/models
    depends_on:
      - redis-grounded
      - knowledge-gateway
      - prometheus-grounded
    networks:
      - integrated-grounding
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # =============================================================================
  # KNOWLEDGE GROUNDING INFRASTRUCTURE
  # =============================================================================

  # Weaviate Vector Database for Knowledge
  weaviate-grounded:
    image: semitechnologies/weaviate:1.21.8
    container_name: weaviate-grounded
    ports:
      - "8080:8080"
    environment:
      - QUERY_DEFAULTS_LIMIT=25
      - AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED=true
      - PERSISTENCE_DATA_PATH=/var/lib/weaviate
      - DEFAULT_VECTORIZER_MODULE=none
      - ENABLE_MODULES=text2vec-openai,text2vec-cohere,text2vec-huggingface
    volumes:
      - weaviate-data:/var/lib/weaviate
    networks:
      - integrated-grounding
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/v1/.well-known/ready"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for Knowledge Caching and Session Management
  redis-grounded:
    image: redis:7.2-alpine
    container_name: redis-grounded
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 2gb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
    networks:
      - integrated-grounding
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # =============================================================================
  # KNOWLEDGE PROCESSING SERVICES
  # =============================================================================

  # Knowledge Gateway (Unified API for all knowledge operations)
  knowledge-gateway:
    build:
      context: ./knowledge-grounding/gateway
      dockerfile: Dockerfile
    container_name: knowledge-gateway
    ports:
      - "8088:8088"
    environment:
      - SUPABASE_URL=http://supabase-db:5432
      - WEAVIATE_URL=http://weaviate-grounded:8080
      - REDIS_URL=redis://redis-grounded:6379
      - CHAT_SERVICE_URL=http://chat-service-grounded:8010
      - MLX_SERVICE_URL=http://mlx-service-grounded:8001
      - PROMETHEUS_URL=http://prometheus-grounded:9090
      - LOG_LEVEL=info
    depends_on:
      - supabase-db
      - weaviate-grounded
      - redis-grounded
      - prometheus-grounded
    networks:
      - integrated-grounding
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Knowledge Sync Service (Syncs Supabase with Weaviate)
  knowledge-sync:
    build:
      context: ./knowledge-grounding/sync
      dockerfile: Dockerfile
    container_name: knowledge-sync
    ports:
      - "8089:8089"
    environment:
      - SUPABASE_URL=postgres://postgres:postgres@supabase-db:5432/postgres
      - WEAVIATE_URL=http://weaviate-grounded:8080
      - REDIS_URL=redis://redis-grounded:6379
      - PROMETHEUS_URL=http://prometheus-grounded:9090
      - SYNC_INTERVAL=300s
      - LOG_LEVEL=info
    depends_on:
      - supabase-db
      - weaviate-grounded
      - redis-grounded
      - prometheus-grounded
    networks:
      - integrated-grounding
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8089/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Knowledge Context Manager (Manages conversation context with knowledge)
  knowledge-context:
    build:
      context: ./knowledge-grounding/context
      dockerfile: Dockerfile
    container_name: knowledge-context
    ports:
      - "8090:8090"
    environment:
      - SUPABASE_URL=postgres://postgres:postgres@supabase-db:5432/postgres
      - WEAVIATE_URL=http://weaviate-grounded:8080
      - REDIS_URL=redis://redis-grounded:6379
      - CHAT_SERVICE_URL=http://chat-service-grounded:8010
      - PROMETHEUS_URL=http://prometheus-grounded:9090
      - LOG_LEVEL=info
    depends_on:
      - supabase-db
      - weaviate-grounded
      - redis-grounded
      - chat-service-grounded
      - prometheus-grounded
    networks:
      - integrated-grounding
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # =============================================================================
  # MONITORING & OBSERVABILITY
  # =============================================================================

  # Enhanced Prometheus with Knowledge Metrics
  prometheus-grounded:
    image: prom/prometheus:v2.49.1
    container_name: prometheus-grounded
    ports:
      - "9091:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=90d'
      - '--storage.tsdb.retention.size=50GB'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    volumes:
      - ./monitoring/prometheus/prometheus-integrated.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/prometheus/rules:/etc/prometheus/rules
      - prometheus-data:/prometheus
    networks:
      - integrated-grounding

  # Enhanced Grafana with Integrated Dashboards
  grafana-grounded:
    image: grafana/grafana:10.2.0
    container_name: grafana-grounded
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel
    depends_on:
      - prometheus-grounded
    networks:
      - integrated-grounding

  # AI Metrics Exporter (Enhanced for Knowledge Grounding)
  ai-metrics-exporter:
    build:
      context: ./monitoring/exporters/ai-metrics
      dockerfile: Dockerfile
    container_name: ai-metrics-exporter
    ports:
      - "9092:9092"
    environment:
      - SUPABASE_URL=postgres://postgres:postgres@supabase-db:5432/postgres
      - WEAVIATE_URL=http://weaviate-grounded:8080
      - CHAT_SERVICE_URL=http://chat-service-grounded:8010
      - MLX_SERVICE_URL=http://mlx-service-grounded:8001
      - KNOWLEDGE_API_URL=http://knowledge-gateway:8088
      - PROMETHEUS_URL=http://prometheus-grounded:9090
      - LOG_LEVEL=info
    depends_on:
      - supabase-db
      - weaviate-grounded
      - chat-service-grounded
      - mlx-service-grounded
      - knowledge-gateway
      - prometheus-grounded
    networks:
      - integrated-grounding

volumes:
  supabase-data:
    driver: local
  weaviate-data:
    driver: local
  redis-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  integrated-grounding:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/16
