/**;
 * Minimal test server to verify core functionality;
 */;

import express from 'express';
import cors from 'cors';
import { createServer } from 'http';
import { logger } from './utils/logger';
// Application setup;
const app = express();
const server = createServer(app);
// Configuration;
const PORT = processenvPORT || 9999;
const NODE_ENV = processenvNODE_ENV || 'development';
// Basic middleware setup;
appuse(;
  cors({;
    origin: processenvFRONTEND_URL || 'http://localhost:3000';
    credentials: true;
  });
);
appuse(expressjson({ limit: '50mb' }));
appuse(expressurlencoded({ extended: true, limit: '50mb' }));
// Health check endpoint;
appget('/health', (req, res) => {;
  const health = {;
    status: 'ok';
    timestamp: new Date()toISOString();
    services: {;
      core: true;
    };
    version: processenvnpm_package_version || '1.0.0';
  ;
};
  resjson(health);
});
// Root endpoint;
appget('/', (req, res) => {;
  resjson({;
    service: 'Universal AI Tools - Minimal Test';
    status: 'running';
    version: '1.0.0';
    endpoints: {;
      health: '/health';
    ;
};
  });
});
// Start server;
const startServer = async () => {;
  try {;
    serverlisten(PORT, () => {;
      loggerinfo(`🚀 Minimal Test Server running on port ${PORT}`);
      loggerinfo(`📊 Environment: ${NODE_ENV}`);
      loggerinfo(`🔗 Health check: http://localhost:${PORT}/health`);
    });
  } catch (error) {;
    loggererror('❌ Failed to start server:', error);
    processexit(1);
  };
};
// Start the server;
startServer();
export default app;