{
  "name": "TypeScript Error Auto-Fixer",
  "description": "Automatically fixes TypeScript errors using AI and stores patterns in Supabase",
  "version": "1.0.0",
  "trigger": {
    "type": "webhook",
    "path": "/api/fix-typescript",
    "method": "POST",
    "authentication": {
      "type": "api_key",
      "header": "X-API-Key"
    }
  },
  "variables": {
    "SUPABASE_URL": "{{env.SUPABASE_URL}}",
    "SUPABASE_KEY": "{{env.SUPABASE_KEY}}",
    "OPENAI_KEY": "{{env.OPENAI_KEY}}",
    "CONFIDENCE_THRESHOLD": 0.8
  },
  "nodes": [
    {
      "id": "validate_input",
      "type": "javascript",
      "name": "Validate Input",
      "code": "if (!$trigger.body.error || !$trigger.body.file) {\n  throw new Error('Missing required fields: error and file');\n}\nreturn $trigger.body;"
    },
    {
      "id": "search_similar",
      "type": "supabase",
      "name": "Search Similar Fixes",
      "depends_on": ["validate_input"],
      "config": {
        "url": "{{SUPABASE_URL}}",
        "key": "{{SUPABASE_KEY}}",
        "operation": "select",
        "table": "code_fix_patterns",
        "query": {
          "select": "*",
          "error_code": "eq.{{validate_input.error.code}}",
          "order": "success_rate.desc",
          "limit": 5
        }
      }
    },
    {
      "id": "get_file_context",
      "type": "supabase",
      "name": "Get File Context",
      "depends_on": ["validate_input"],
      "config": {
        "operation": "rpc",
        "function": "get_file_context",
        "params": {
          "file_path": "{{validate_input.file}}",
          "line_number": "{{validate_input.line}}",
          "context_lines": 10
        }
      }
    },
    {
      "id": "generate_fix",
      "type": "openai",
      "name": "Generate Fix with GPT-4",
      "depends_on": ["search_similar", "get_file_context"],
      "config": {
        "api_key": "{{OPENAI_KEY}}",
        "model": "gpt-4-turbo-preview",
        "temperature": 0.3,
        "response_format": { "type": "json_object" },
        "messages": [
          {
            "role": "system",
            "content": "You are a TypeScript expert. Analyze the error and provide a fix. Always respond with valid JSON containing: {\"fixed_code\": \"string\", \"explanation\": \"string\", \"confidence\": number, \"imports\": []}"
          },
          {
            "role": "user",
            "content": "Fix this TypeScript error:\n\nError: {{validate_input.error.code}} - {{validate_input.error.message}}\nFile: {{validate_input.file}}\nLine: {{validate_input.line}}\n\nProblematic code:\n```typescript\n{{validate_input.codeSnippet}}\n```\n\nFile context:\n```typescript\n{{get_file_context.result}}\n```\n\nSimilar fixes that worked:\n{{#each search_similar.data}}\n- {{this.fix_pattern}} (success rate: {{this.success_rate}})\n{{/each}}"
          }
        ]
      }
    },
    {
      "id": "parse_response",
      "type": "javascript",
      "name": "Parse AI Response",
      "depends_on": ["generate_fix"],
      "code": "const response = JSON.parse($generate_fix.choices[0].message.content);\nresponse.original_error = $validate_input.error;\nresponse.file_path = $validate_input.file;\nresponse.line_number = $validate_input.line;\nreturn response;"
    },
    {
      "id": "check_confidence",
      "type": "condition",
      "name": "Check Confidence Level",
      "depends_on": ["parse_response"],
      "condition": "{{parse_response.confidence}} >= {{CONFIDENCE_THRESHOLD}}",
      "branches": {
        "true": "store_and_apply",
        "false": "store_as_suggestion"
      }
    },
    {
      "id": "store_and_apply",
      "type": "parallel",
      "name": "Store and Apply Fix",
      "depends_on": ["check_confidence"],
      "nodes": [
        {
          "id": "store_fix",
          "type": "supabase",
          "name": "Store Fix Attempt",
          "config": {
            "operation": "insert",
            "table": "code_fix_attempts",
            "data": {
              "error_code": "{{parse_response.original_error.code}}",
              "error_message": "{{parse_response.original_error.message}}",
              "file_path": "{{parse_response.file_path}}",
              "line_number": "{{parse_response.line_number}}",
              "fixed_code": "{{parse_response.fixed_code}}",
              "explanation": "{{parse_response.explanation}}",
              "confidence": "{{parse_response.confidence}}",
              "status": "applied",
              "additional_imports": "{{parse_response.imports}}"
            }
          }
        },
        {
          "id": "apply_fix",
          "type": "custom_api",
          "name": "Apply Fix to File",
          "config": {
            "url": "{{env.FILE_SERVICE_URL}}/apply-fix",
            "method": "POST",
            "headers": {
              "Content-Type": "application/json"
            },
            "body": {
              "file": "{{parse_response.file_path}}",
              "line": "{{parse_response.line_number}}",
              "newCode": "{{parse_response.fixed_code}}",
              "imports": "{{parse_response.imports}}"
            }
          }
        }
      ]
    },
    {
      "id": "store_as_suggestion",
      "type": "supabase",
      "name": "Store as Suggestion",
      "depends_on": ["check_confidence"],
      "config": {
        "operation": "insert",
        "table": "code_fix_attempts",
        "data": {
          "error_code": "{{parse_response.original_error.code}}",
          "error_message": "{{parse_response.original_error.message}}",
          "file_path": "{{parse_response.file_path}}",
          "line_number": "{{parse_response.line_number}}",
          "fixed_code": "{{parse_response.fixed_code}}",
          "explanation": "{{parse_response.explanation}}",
          "confidence": "{{parse_response.confidence}}",
          "status": "suggested"
        }
      }
    },
    {
      "id": "verify_fix",
      "type": "delay",
      "name": "Wait for Build",
      "depends_on": ["store_and_apply"],
      "delay": 5000,
      "then": {
        "id": "check_build",
        "type": "custom_api",
        "name": "Check Build Status",
        "config": {
          "url": "{{env.BUILD_SERVICE_URL}}/status",
          "method": "GET"
        }
      }
    },
    {
      "id": "update_success_rate",
      "type": "supabase",
      "name": "Update Pattern Success Rate",
      "depends_on": ["verify_fix"],
      "condition": "{{check_build.status}} === 'success'",
      "config": {
        "operation": "rpc",
        "function": "update_fix_success_rate",
        "params": {
          "pattern_id": "{{search_similar.data[0].id}}",
          "was_successful": "{{check_build.status === 'success'}}"
        }
      }
    },
    {
      "id": "webhook_response",
      "type": "response",
      "name": "Send Response",
      "depends_on": ["store_and_apply", "store_as_suggestion"],
      "config": {
        "status": 200,
        "headers": {
          "Content-Type": "application/json"
        },
        "body": {
          "success": true,
          "applied": "{{parse_response.confidence >= CONFIDENCE_THRESHOLD}}",
          "confidence": "{{parse_response.confidence}}",
          "fix": {
            "code": "{{parse_response.fixed_code}}",
            "explanation": "{{parse_response.explanation}}",
            "imports": "{{parse_response.imports}}"
          }
        }
      }
    }
  ],
  "error_handler": {
    "type": "response",
    "config": {
      "status": 500,
      "body": {
        "success": false,
        "error": "{{error.message}}"
      }
    }
  }
}