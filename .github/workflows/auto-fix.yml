name: üîß Auto-Fix Code Issues

on:
  push:
    branches: [master, main, development]
  pull_request:
    branches: [master, main]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      force_fix:
        description: 'Force fix all issues'
        required: false
        default: false
        type: boolean

permissions:
  contents: write
  pull-requests: write
  checks: write

jobs:
  auto-fix:
    name: Auto-Fix TypeScript & Linting Issues
    runs-on: ubuntu-latest

    steps:
      - name: üõ°Ô∏è Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: true

      - name: üîß Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: üì¶ Install dependencies
        run: |
          npm ci
          npm install -g typescript@latest

      - name: üßπ Run ESLint auto-fix
        run: |
          npx eslint "src/**/*.{ts,js}" --fix --max-warnings 0 || true

      - name: üíÑ Run Prettier formatting
        run: |
          npx prettier --write "src/**/*.{ts,js,json,md}" || true

      - name: üîç Fix TypeScript strict issues
        run: |
          # Create backup
          cp tsconfig.json tsconfig.json.backup

          # Try with strict mode fixes
          npx typescript-strict-mode-fixer --project . --auto-fix || true

          # Restore if needed
          if [ ! -f tsconfig.json ]; then
            mv tsconfig.json.backup tsconfig.json
          fi

      - name: üèóÔ∏è Type check
        run: |
          npx tsc --noEmit --skipLibCheck || echo "Type errors found - will be reported"

      - name: üìä Generate fix report
        id: fix-report
        run: |
          echo "## üîß Auto-Fix Report" > fix-report.md
          echo "" >> fix-report.md

          # Check for changes
          if [ -n "$(git status --porcelain)" ]; then
            echo "### ‚úÖ Changes Applied:" >> fix-report.md
            git diff --name-only >> fix-report.md
            echo "" >> fix-report.md
            echo "### üìã Summary:" >> fix-report.md
            git diff --stat >> fix-report.md
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "### ‚ÑπÔ∏è No auto-fixable issues found" >> fix-report.md
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi

      - name: üí¨ Comment on PR (if applicable)
        if: github.event_name == 'pull_request' && steps.fix-report.outputs.has_changes == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('fix-report.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: report
            });

      - name: üì§ Commit and push changes
        if: steps.fix-report.outputs.has_changes == 'true'
        run: |
          # Configure Git with proper authentication
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git config --global init.defaultBranch main

          # Ensure we're authenticated
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}

          git add .

          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit"
            exit 0
          fi

          git commit -m "üîß Auto-fix: ESLint, Prettier, and TypeScript improvements

          - Applied ESLint auto-fixes
          - Formatted code with Prettier
          - Fixed TypeScript strict mode issues

          ü§ñ Generated by GitHub Actions"

          # Push directly for schedule/workflow_dispatch, create PR for pushes
          if [ "${{ github.event_name }}" = "schedule" ] || [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            git push origin HEAD:${{ github.ref_name }}
          elif [ "${{ github.event_name }}" = "push" ]; then
            # Create a new branch and PR
            BRANCH_NAME="auto-fix/$(date +%Y%m%d-%H%M%S)"
            git checkout -b "$BRANCH_NAME"
            git push origin "$BRANCH_NAME"

            gh pr create \
              --title "üîß Auto-fix: Code quality improvements" \
              --body "Automated fixes applied by GitHub Actions" \
              --base "${{ github.ref_name }}" \
              --head "$BRANCH_NAME" || echo "PR creation failed or already exists"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  security-scan:
    name: üõ°Ô∏è Security Auto-Fix
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'

    steps:
      - name: üõ°Ô∏è Checkout code
        uses: actions/checkout@v4

      - name: üîß Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: üîç Run npm audit fix
        run: |
          npm audit fix --force || true

      - name: üìä Check for security updates
        run: |
          if [ -n "$(git status --porcelain package*.json)" ]; then
            echo "Security updates applied"
            git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git config --global user.name "github-actions[bot]"
            git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
            git add package*.json
            git commit -m "üîí Security: Apply npm audit fixes

            ü§ñ Generated by GitHub Actions"
            git push origin HEAD:${{ github.ref_name }}
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
