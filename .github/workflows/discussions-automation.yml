name: Discussions Automation

on:
  discussion:
    types: [created, answered, category_changed]
  discussion_comment:
    types: [created]
  schedule:
    - cron: '0 12 * * *' # Daily at noon UTC
  workflow_dispatch:

jobs:
  auto-label-discussions:
    name: Auto-Label Discussions
    runs-on: ubuntu-latest
    if: github.event_name == 'discussion'
    permissions:
      discussions: write
    steps:
      - name: Label new discussions
        uses: actions/github-script@v7
        with:
          script: |
            const { discussion } = context.payload;
            const labels = [];

            // Auto-label based on category and content
            const category = discussion.category.name.toLowerCase();
            const title = discussion.title.toLowerCase();
            const body = discussion.body.toLowerCase();

            // Category-based labels
            if (category.includes('help')) {
              labels.push('help-wanted');
            }
            if (category.includes('feature')) {
              labels.push('enhancement');
            }
            if (category.includes('bug')) {
              labels.push('bug');
            }
            if (category.includes('question')) {
              labels.push('question');
            }

            // Content-based labels
            if (title.includes('electron') || body.includes('electron')) {
              labels.push('electron');
            }
            if (title.includes('rust') || body.includes('rust')) {
              labels.push('rust');
            }
            if (title.includes('api') || body.includes('api')) {
              labels.push('api');
            }
            if (title.includes('security') || body.includes('security')) {
              labels.push('security');
            }
            if (title.includes('performance') || body.includes('performance')) {
              labels.push('performance');
            }

            console.log(`Auto-labeling discussion with: ${labels.join(', ')}`);

  welcome-new-discussions:
    name: Welcome New Discussions
    runs-on: ubuntu-latest
    if: github.event.action == 'created'
    permissions:
      discussions: write
    steps:
      - name: Welcome new discussion
        uses: actions/github-script@v7
        with:
          script: |
            const { discussion } = context.payload;

            const welcomeMessage = `
            👋 Welcome to Universal AI Tools discussions!

            Thank you for starting this discussion. Here's what you can expect:

            ## 🤝 Community Guidelines
            - **Be respectful** and constructive in your communications
            - **Search existing discussions** before creating new ones
            - **Provide context** and details when asking for help
            - **Share solutions** that work for you to help others

            ## 🏷️ Discussion Categories
            - **💡 Ideas & Feature Requests** - Share your ideas for new features
            - **❓ Q&A** - Ask questions and get help from the community
            - **🐛 Bug Reports** - Report issues you've encountered
            - **📚 Tutorials & Guides** - Share knowledge and best practices
            - **🎉 Show & Tell** - Showcase your projects and achievements

            ## 🔧 Getting Help
            If you need immediate assistance:
            1. Check our [documentation](https://github.com/Cmerrill1713/universal-ai-tools/blob/master/README.md)
            2. Review existing discussions and issues
            3. Provide detailed information about your setup and issue

            ## 🚀 Contributing
            Interested in contributing? Check out our [contribution guidelines](https://github.com/Cmerrill1713/universal-ai-tools/blob/master/CONTRIBUTING.md)

            We're excited to hear your thoughts and help you succeed with Universal AI Tools!
            `;

            // Only post welcome message for first-time contributors
            const isFirstDiscussion = discussion.author_association === 'NONE' || discussion.author_association === 'FIRST_TIME_CONTRIBUTOR';

            if (isFirstDiscussion) {
              await github.rest.discussions.createComment({
                discussion_number: discussion.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: welcomeMessage
              });
            }

  discussion-metrics:
    name: Discussion Metrics
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    permissions:
      discussions: read
    steps:
      - name: Collect discussion metrics
        uses: actions/github-script@v7
        with:
          script: |
            console.log('📊 Collecting discussion metrics...');

            const { data: discussions } = await github.rest.discussions.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 100
            });

            const metrics = {
              total: discussions.length,
              answered: discussions.filter(d => d.answered).length,
              unanswered: discussions.filter(d => !d.answered).length,
              categories: {}
            };

            // Count by category
            discussions.forEach(discussion => {
              const category = discussion.category.name;
              metrics.categories[category] = (metrics.categories[category] || 0) + 1;
            });

            console.log('Discussion Metrics:', JSON.stringify(metrics, null, 2));

            // Save metrics for future analysis
            const fs = require('fs');
            fs.writeFileSync('discussion-metrics.json', JSON.stringify(metrics, null, 2));

      - name: Upload metrics
        uses: actions/upload-artifact@v4
        with:
          name: discussion-metrics-${{ github.run_id }}
          path: discussion-metrics.json
          retention-days: 30
