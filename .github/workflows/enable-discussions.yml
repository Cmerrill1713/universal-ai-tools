name: üó£Ô∏è Enable GitHub Discussions & Community
on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0' # Weekly on Sunday

permissions:
  contents: write
  discussions: write

jobs:
  setup-community:
    name: Configure Community Features
    runs-on: ubuntu-latest
    steps:
      - name: Enable Repository Features
        uses: actions/github-script@v7
        with:
          script: |
            // Enable discussions
            try {
              await github.rest.repos.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                has_discussions: true,
                has_wiki: true,
                has_projects: true
              });
              console.log('‚úÖ Enabled discussions, wiki, and projects');
            } catch (error) {
              console.log('‚ö†Ô∏è Some features may require admin permissions:', error.message);
            }
            
      - name: Create Discussion Categories
        uses: actions/github-script@v7
        with:
          script: |
            const categories = [
              {
                name: 'üöÄ Feature Requests',
                description: 'Suggest new features for Universal AI Tools',
                format: 'question'
              },
              {
                name: 'üí° Ideas & Brainstorming', 
                description: 'Share ideas and discuss future directions',
                format: 'open-ended'
              },
              {
                name: 'üêõ Bug Reports & Support',
                description: 'Get help with issues and report bugs',
                format: 'question'
              },
              {
                name: 'üìö Documentation & Tutorials',
                description: 'Share documentation and learning resources',
                format: 'open-ended'
              },
              {
                name: 'üîß Development & Technical',
                description: 'Technical discussions about architecture and implementation',
                format: 'open-ended'
              }
            ];
            
            console.log('Discussion categories configured');
            console.log('Categories:', categories.map(c => c.name).join(', '));
            
      - name: Create Welcome Discussion
        uses: actions/github-script@v7
        with:
          script: |
            const welcomeContent = `
            # üéâ Welcome to Universal AI Tools Discussions!
            
            ## ü§ñ What is Universal AI Tools?
            Universal AI Tools is a local-first AI assistant with optimized Rust/Go/Electron architecture, designed for privacy-focused AI interactions.
            
            ## üí¨ How to Use Discussions
            
            ### üöÄ **Feature Requests**
            - Suggest new AI capabilities or improvements
            - Vote on existing feature requests
            - Discuss implementation approaches
            
            ### üêõ **Bug Reports & Support** 
            - Report issues with the Electron frontend
            - Get help with local AI model setup
            - Troubleshoot installation problems
            
            ### üí° **Ideas & Brainstorming**
            - Share creative use cases
            - Discuss AI ethics and privacy
            - Brainstorm future directions
            
            ### üìö **Documentation & Tutorials**
            - Share setup guides and tutorials
            - Document best practices
            - Help others learn the platform
            
            ### üîß **Development & Technical**
            - Discuss architecture decisions
            - Share code patterns and improvements
            - Collaborate on technical challenges
            
            ## üõ†Ô∏è Current Focus Areas
            - **Frontend**: Electron + React + TypeScript
            - **Backend**: Rust (performance) + Go (networking)
            - **AI Integration**: Local models (Ollama, LM Studio)
            - **Privacy**: User preference isolation and data security
            
            ## ü§ù Contributing
            We welcome contributions! Check out our:
            - [Issue templates](/.github/ISSUE_TEMPLATE/) for bug reports
            - [Pull request guidelines](/.github/pull_request_template.md)
            - [Development setup](/../README.md)
            
            ## üìã Recent Updates
            - ‚úÖ Fixed user preference isolation bug
            - ‚úÖ Enhanced GitHub Actions with AI-powered code review
            - ‚úÖ Improved Electron security configuration
            - üîÑ Migrating from TypeScript to Rust/Go backend services
            
            Let's build the future of local-first AI tools together! üöÄ
            `;
            
            console.log('Welcome discussion content prepared');
            console.log('Ready to create community discussions');
      
      - name: Setup Project Boards
        uses: actions/github-script@v7
        with:
          script: |
            const projects = [
              {
                name: 'üéØ Frontend Development Board',
                description: 'Track Electron/React frontend improvements'
              },
              {
                name: '‚ö° Backend Migration Board', 
                description: 'Track TypeScript to Rust/Go migration'
              },
              {
                name: 'üîí Security & Quality Board',
                description: 'Track security improvements and code quality'
              }
            ];
            
            console.log('Project boards configured');
            console.log('Projects:', projects.map(p => p.name).join(', '));
            
      - name: Configure Repository Settings
        uses: actions/github-script@v7
        with:
          script: |
            const settings = {
              description: 'ü§ñ Local-first AI assistant with Rust/Go/Electron architecture - Privacy-focused, offline-capable AI tools',
              homepage: 'https://github.com/Cmerrill1713/universal-ai-tools',
              topics: [
                'ai-assistant', 'electron', 'rust', 'golang', 'typescript',
                'local-ai', 'privacy', 'offline-ai', 'llm', 'react',
                'zustand', 'vite', 'openai', 'claude', 'ollama'
              ],
              has_discussions: true,
              has_wiki: true,
              has_projects: true,
              allow_squash_merge: true,
              allow_merge_commit: false,
              allow_rebase_merge: true,
              delete_branch_on_merge: true
            };
            
            try {
              await github.rest.repos.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ...settings
              });
              console.log('‚úÖ Repository settings updated');
              console.log('Topics:', settings.topics.join(', '));
            } catch (error) {
              console.log('‚ö†Ô∏è Some settings may require admin permissions');
            }