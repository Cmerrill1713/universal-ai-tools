name: Gitleaks Security Scan

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  gitleaks:
    name: Gitleaks Secret Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for scanning

      - name: Run Gitleaks
        id: gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_CONFIG: .gitleaks.toml
          GITLEAKS_ENABLE_COMMENTS: true
          GITLEAKS_ENABLE_UPLOAD_ARTIFACT: true
          GITLEAKS_ENABLE_SUMMARY: true

      - name: Upload Gitleaks results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-results
          path: |
            gitleaks-report.json
            gitleaks-report.sarif
          retention-days: 30

      - name: Comment PR
        if: github.event_name == 'pull_request' && failure()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `### 🚨 Gitleaks Security Scan Failed
            
            Potential secrets were detected in your code. Please review the scan results and either:
            
            1. Remove the secrets from your code
            2. If it's a false positive, update \`.gitleaks.toml\` to exclude it
            3. Move secrets to environment variables or a secure secret management system
            
            For more details, check the workflow logs or download the scan artifacts.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

  gitleaks-protect:
    name: Gitleaks Protect (Pre-commit)
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v47

      - name: Run Gitleaks Protect on changed files
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo "Scanning changed files for secrets..."
          echo "${{ steps.changed-files.outputs.all_changed_files }}" | tr ' ' '\n' > changed_files.txt
          
          # Install gitleaks
          wget -q https://github.com/gitleaks/gitleaks/releases/download/v8.18.4/gitleaks_8.18.4_linux_x64.tar.gz
          tar -xzf gitleaks_8.18.4_linux_x64.tar.gz
          
          # Run gitleaks protect on changed files
          while IFS= read -r file; do
            if [ -f "$file" ]; then
              echo "Scanning: $file"
              ./gitleaks protect --staged --config=.gitleaks.toml --verbose --no-git
            fi
          done < changed_files.txt

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    if: always()
    needs: [gitleaks, gitleaks-protect]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: gitleaks-results
          path: ./results
        continue-on-error: true

      - name: Generate security summary
        run: |
          echo "## Security Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ -f "./results/gitleaks-report.json" ]; then
            LEAKS=$(jq length ./results/gitleaks-report.json 2>/dev/null || echo "0")
            if [ "$LEAKS" -gt 0 ]; then
              echo "### ⚠️ Found $LEAKS potential secret(s)" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "Please review the Gitleaks report in the artifacts." >> $GITHUB_STEP_SUMMARY
            else
              echo "### ✅ No secrets detected" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "### ✅ Security scan completed" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "*Gitleaks scan completed at $(date -u)*" >> $GITHUB_STEP_SUMMARY