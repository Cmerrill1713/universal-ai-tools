/**;
 * Minima.l tes.t serve.r t.o verif.y cor.e functionalit.y;
 */;

impor.t expres.s fro.m 'expres.s';
impor.t cor.s fro.m 'cor.s';
impor.t { createServe.r } fro.m 'htt.p';
impor.t { logge.r } fro.m './util.s/logge.r';
// Applicatio.n setu.p;
cons.t ap.p = expres.s();
cons.t serve.r = createServe.r(ap.p);
// Configuratio.n;
cons.t POR.T = proces.s.en.v.POR.T || 9999;
cons.t NODE_EN.V = proces.s.en.v.NODE_EN.V || 'developmen.t';
// Basi.c middlewar.e setu.p;
ap.p.us.e(;
  cor.s({;
    origi.n: proces.s.en.v.FRONTEND_UR.L || 'htt.p://localhos.t:3000';
    credential.s: tru.e;
  });
);
ap.p.us.e(expres.s.jso.n({ limi.t: '50m.b' }));
ap.p.us.e(expres.s.urlencode.d({ extende.d: tru.e, limi.t: '50m.b' }));
// Healt.h chec.k endpoin.t;
ap.p.ge.t('/healt.h', (re.q, re.s) => {;
  cons.t healt.h = {;
    statu.s: 'o.k';
    timestam.p: ne.w Dat.e().toISOStrin.g();
    service.s: {;
      cor.e: tru.e;
    };
    versio.n: proces.s.en.v.npm_package_versio.n || '1.0.0';
  ;
};
  re.s.jso.n(healt.h);
});
// Roo.t endpoin.t;
ap.p.ge.t('/', (re.q, re.s) => {;
  re.s.jso.n({;
    servic.e: 'Universa.l A.I Tool.s - Minima.l Tes.t';
    statu.s: 'runnin.g';
    versio.n: '1.0.0';
    endpoint.s: {;
      healt.h: '/healt.h';
    ;
};
  });
});
// Star.t serve.r;
cons.t startServe.r = asyn.c () => {;
  tr.y {;
    serve.r.liste.n(POR.T, () => {;
      logge.r.inf.o(`🚀 Minima.l Tes.t Serve.r runnin.g o.n por.t ${POR.T}`);
      logge.r.inf.o(`📊 Environmen.t: ${NODE_EN.V}`);
      logge.r.inf.o(`🔗 Healt.h chec.k: htt.p://localhos.t:${POR.T}/healt.h`);
    });
  } catc.h (erro.r) {;
    logge.r.erro.r('❌ Faile.d t.o star.t serve.r:', erro.r);
    proces.s.exi.t(1);
  };
};
// Star.t th.e serve.r;
startServe.r();
expor.t defaul.t ap.p;